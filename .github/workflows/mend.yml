# Name of your GitHub Actions Workflow
name: Mend Security Scan 

# Triggers for the workflow
on:
  # Run on pushes to the main branch
  push:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  mend-scan:
    runs-on: ubuntu-latest

    steps:
      # --- STAGE 1: PREPARATION AND BUILD ---

      # Step 1: Checks-out your repository
      - name: Checkout code
        uses: actions/checkout@v4

      # (Optional but recommended) Add this step for debugging path issues
      - name: List files to confirm structure
        run: ls -R

      # Step 2: Sets up a JDK environment
      # NOTE: JDK 23 is not an LTS release. Consider using 17 or 21 for better stability.
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17' # Changed to LTS version 17
          distribution: 'temurin'

      # Step 3: Builds the project with Maven
      - name: Build Project & Install Dependencies
        # FIX #1: Run Maven inside the 'AutoPrompt' directory where the pom.xml is located.
        # Added `-B` for batch mode, which is standard for CI/CD.
        working-directory: ./AutoPrompt 
        run: mvn -B clean dependency:resolve compile

      # Step 4: Downloads the Mend CLI
      - name: Download Mend CLI
        run: |
          curl -L -o mend https://downloads.mend.io/cli/linux_amd64/mend
          chmod +x mend
      
      # --- STAGE 2: MEND SCANS AND REPORT GENERATION ---

      # Step 5: Runs the scans and generates the report
      - name: Run Mend Scans and Generate Report
        # FIX #2: Run Mend CLI in the project directory so it can find the pom.xml and source files.
        working-directory: ./AutoPrompt
        env:
          MEND_USER_KEY: ${{ secrets.MEND_USER_KEY }}
          MEND_EMAIL: ${{ vars.ENVEMAIL }}
          MEND_URL: https://saas-eu.mend.io
        run: |
          # The 'mend' executable is in the parent directory, so we call it with ../mend
          MEND_SCOPE="product=My_Web_Applications -project=WebGoat_Main_Branch"

          echo "--- Running Mend SCA, SAST and Image scans ---"
          ../mend deps --scope "$MEND_SCOPE" --reachability
          ../mend code --scope "$MEND_SCOPE"
          
          echo "--- Waiting 30 seconds for server processing ---"
          sleep 30
          
          echo "--- Generating JSON report with --export-results ---"
          ../mend deps --scope "$MEND_SCOPE" --export-results sca-report.json

      # --- STAGE 3: REPORT ARCHIVING ---
      
      # Step 6: Uploads the generated report as a build artifact
      - name: Upload SCA Report
        uses: actions/upload-artifact@v4
        with:
          name: sca-scan-report
          # FIX #3: The report is now created inside the 'AutoPrompt' directory.
          path: AutoPrompt/sca-report.json
